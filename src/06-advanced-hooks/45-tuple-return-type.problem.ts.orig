import { Dispatch, useState } from "react";
import { Equal, Expect } from "../helpers/type-utils";

/**
 * Here, we've got a hook that returns a tuple of [value, setValue].
 *
 * But if we hover over id and setId below, you'll see that they're
 * both inferred as string | React.Dispatch<React.SetStateAction<string>>,
 * which is not ideal.
 *
 * 1. Find a way to fix the errors below.
 */

// export const useId = (defaultId: string): [string, Dispatch<React.SetStateAction<string>>] => {
//   const [id, setId] = useState<string>(defaultId);

<<<<<<< HEAD
//   return [id, setId];
// };

export const useId = (defaultId: string) => {
  const [id, setId] = useState<string>(defaultId);

  return [id, setId] as const
=======
  return [id, setId] as const;
>>>>>>> 684c8b9 (Excercise 56)
};

const [id, setId] = useId("1");

type tests = [
  Expect<Equal<typeof id, string>>,
  Expect<Equal<typeof setId, React.Dispatch<React.SetStateAction<string>>>>,
];
